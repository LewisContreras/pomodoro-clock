{"version":3,"sources":["App.js","index.js"],"names":["App","breakRef","useRef","sessionRef","mounted","useState","current","session","setSession","breakSess","setBreakSess","clockState","setClockState","currentSession","setCurrentSession","handleDecrement","e","currentTarget","id","includes","handleIncrement","holarte","a","setTimeout","console","log","useEffect","theme","color","backgroundColor","h","spacing","w","fontSize","justifyContent","width","cursor","onClick","as","FaArrowDown","FaArrowUp","border","borderColor","borderRadius","time","minutes","Math","floor","seconds","length","formatTimes","FaPlay","FaRedo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96f95545.chunk.js","sourcesContent":["import React,{useState, useRef, useEffect} from 'react';\nimport {\n  Box,\n  Center,\n  ChakraProvider,\n  HStack,\n  Icon,\n  Text,\n  theme,\n  VStack,\n} from '@chakra-ui/react';\n// import { ColorModeSwitcher } from './ColorModeSwitcher';\nimport {FaPlay, FaRedo, FaArrowDown, FaArrowUp} from \"react-icons/fa\"\n\n\n\nfunction App() {\n  const breakRef = useRef(5)\n  const sessionRef = useRef(25)\n  const mounted = useRef(false)\n  const [session, setSession] = useState(sessionRef.current)\n  const [breakSess, setBreakSess] = useState(breakRef.current)\n  const [clockState, setClockState] = useState(\"paused\")\n  const [currentSession, setCurrentSession] = useState(session*60)\n  \n  const currentSessionRef = useRef(session)\n\n  const formatTimes = (time)=>{\n    let minutes = Math.floor(time/60) + \"\"\n    let seconds = time%60 + \"\"\n    minutes.length === 1 ? minutes = \"0\" + minutes : minutes += \"\"\n    seconds.length === 1 ? seconds = \"0\" + seconds : seconds += \"\"\n    let timeConverted = minutes + \":\" + seconds\n    return timeConverted\n  }\n\n  const handleDecrement = (e) => {\n    if(e.currentTarget.id.includes(\"break\")){\n      breakSess > 1 && setBreakSess(breakSess - 1)\n    }else{\n      session > 1 && setSession(session - 1)\n      currentSession > 1*60 && setCurrentSession((session - 1)*60) \n    }  \n  }\n\n  const handleIncrement = (e) => {\n    if(e.currentTarget.id.includes(\"break\")){\n      breakSess < 60 && setBreakSess(breakSess + 1)\n    }else{\n      session < 60 && setSession(session + 1)\n      currentSession < 60*60 && setCurrentSession((session + 1)*60) \n    } \n  }\n\n  const handleReset = () => {\n    setSession(sessionRef.current)\n    setBreakSess(breakRef.current)\n    setCurrentSession(sessionRef.current *60)\n  }\n\n\n  const holarte = async () =>{\n    if(currentSession === 0){\n      setCurrentSession(breakSess*60)\n    }\n    setTimeout(()=>setCurrentSession(currentSession-1), 1000);\n    console.log(\"hola\"+ currentSession)\n  }\n  const handlePlay = (e) => {\n    if(clockState ===\"paused\"){\n      setClockState(\"running\")\n      holarte()\n    }else{\n      setClockState(\"paused\")\n    }\n  }\n\n  useEffect( () => {\n    // let hola;\n    if(!mounted.current){\n      mounted.current = true\n    }else if(clockState ===\"running\"){    \n      holarte()    \n    } \n  }, [currentSession])\n  \n\n  return (\n    <ChakraProvider theme={theme}>\n      <Center color=\"white\" backgroundColor=\"red.400\" h=\"100vh\" > \n        <VStack spacing={4} w=\"400px\" >\n          <Text fontSize=\"4xl\" >25 + 5 Clock</Text>\n          <HStack justifyContent=\"space-around\" width=\"100%\">\n            <Box>\n              <Text id=\"break-label\" fontSize=\"xl\" >Break Length</Text>\n              <HStack justifyContent=\"center\" >\n              <Icon id=\"break-decrement\"  cursor=\"pointer\" onClick={(e) => handleDecrement(e)} as={FaArrowDown} />\n                <Text id=\"break-length\" >{breakSess}</Text>\n                <Icon id=\"break-increment\"  cursor=\"pointer\" onClick={(e) => handleIncrement(e)} as={FaArrowUp} />\n              </HStack>\n            </Box>\n            <Box>\n              <Text id=\"session-label\" fontSize=\"xl\" >Session Length</Text>\n              <HStack justifyContent=\"center\" >\n                <Icon id=\"session-decrement\" cursor=\"pointer\" onClick={(e) => handleDecrement(e)}  as={FaArrowDown} />\n                <Text id=\"session-length\" >{session}</Text>\n                <Icon id=\"session-increment\"  cursor=\"pointer\" onClick={(e) => handleIncrement(e)} as={FaArrowUp} />\n              </HStack>\n            </Box>\n          </HStack>\n\n\n          <VStack width=\"250px\" border=\"4px solid\" borderColor=\"blackAlpha.400\" borderRadius={10} >\n            <Text id=\"timer-label\" fontSize=\"2xl\">Session</Text>\n            <Text id=\"time-left\" fontSize=\"6xl\">{formatTimes(currentSession)}</Text>\n          </VStack>\n\n\n          <HStack>\n            <HStack id=\"start_stop\" >\n              <Icon cursor=\"pointer\" onClick={handlePlay} as={FaPlay} />\n              {/* <Icon cursor=\"pointer\" as={FaPause} /> */}\n            </HStack  >\n            <Icon id=\"reset\" cursor=\"pointer\" onClick={handleReset} as={FaRedo} />\n          </HStack>\n        </VStack>\n        {/* <audio id=\"beep\" src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\" ></audio> */}\n      </Center>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <ColorModeScript />\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}